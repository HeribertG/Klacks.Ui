import { Injectable } from '@angular/core';
import {
  Shift,
  ShiftStatus,
  ShiftType,
  TruncatedShift,
} from 'src/app/core/shift-data-class';

@Injectable({
  providedIn: 'root',
})
export class MockDataManagementShiftService {
  public listWrapper: TruncatedShift = {
    shifts: [
      new Shift({
        id: '1',
        name: 'Normale Arbeitszeit',
        description: 'Standard Arbeitszeiten für die Woche',
        fromDate: '2025-01-01',
        untilDate: '2025-12-31',
        startShift: '08:00',
        endShift: '17:00',
        isMonday: true,
        isTuesday: true,
        isWednesday: true,
        isThursday: true,
        isFriday: true,
        isSaturday: false,
        isSunday: false,
        isHoliday: false,
        isWeekdayOrHoliday: false,
        workTime: 9 * 60, // 9 Stunden in Minuten
        shiftType: ShiftType.IsTask,
        status: ShiftStatus.Original,
      }),
      new Shift({
        id: '2',
        name: 'Frühschicht',
        description: 'Frühe Schicht für Produktionsabteilung',
        fromDate: '2025-01-01',
        untilDate: '2025-06-30',
        startShift: '06:00',
        endShift: '14:00',
        isMonday: true,
        isTuesday: true,
        isWednesday: true,
        isThursday: true,
        isFriday: true,
        isSaturday: false,
        isSunday: false,
        isHoliday: false,
        isWeekdayOrHoliday: false,
        workTime: 8 * 60, // 8 Stunden in Minuten
        shiftType: ShiftType.IsTask,
        status: ShiftStatus.Original,
      }),
      new Shift({
        id: '3',
        name: 'Spätschicht',
        description: 'Späte Schicht für Produktionsabteilung',
        fromDate: '2025-01-01',
        untilDate: '2025-06-30',
        startShift: '14:00',
        endShift: '22:00',
        isMonday: true,
        isTuesday: true,
        isWednesday: true,
        isThursday: true,
        isFriday: true,
        isSaturday: false,
        isSunday: false,
        isHoliday: false,
        isWeekdayOrHoliday: false,
        workTime: 8 * 60, // 8 Stunden in Minuten
        shiftType: ShiftType.IsTask,
        status: ShiftStatus.Original,
      }),
      new Shift({
        id: '4',
        name: 'Wochenendarbeit',
        description: 'Spezielle Arbeitszeiten für Wochenenden',
        fromDate: '2025-01-01',
        startShift: '10:00',
        endShift: '18:00',
        isMonday: false,
        isTuesday: false,
        isWednesday: false,
        isThursday: false,
        isFriday: false,
        isSaturday: true,
        isSunday: true,
        isHoliday: false,
        isWeekdayOrHoliday: false,
        workTime: 8 * 60, // 8 Stunden in Minuten
        shiftType: ShiftType.IsTask,
        status: ShiftStatus.Original,
      }),
      new Shift({
        id: '5',
        name: 'Feiertagsdienst',
        description: 'Spezielle Arbeitszeiten für gesetzliche Feiertage',
        fromDate: '2025-01-01',
        untilDate: '2025-12-31',
        startShift: '09:00',
        endShift: '15:00',
        isMonday: false,
        isTuesday: false,
        isWednesday: false,
        isThursday: false,
        isFriday: false,
        isSaturday: false,
        isSunday: false,
        isHoliday: true,
        isWeekdayOrHoliday: false,
        workTime: 6 * 60, // 6 Stunden in Minuten
        shiftType: ShiftType.IsTask,
        status: ShiftStatus.Original,
      }),
      new Shift({
        id: '6',
        name: 'Notfalldienst',
        description:
          'Bereitschaftsdienst für Notfälle an Werktagen und Feiertagen',
        fromDate: '2025-04-01',
        untilDate: '2025-09-30',
        startShift: '00:00',
        endShift: '23:59',
        isMonday: true,
        isTuesday: true,
        isWednesday: true,
        isThursday: true,
        isFriday: true,
        isSaturday: true,
        isSunday: true,
        isHoliday: true,
        isWeekdayOrHoliday: true,
        isSporadic: true,
        workTime: 24 * 60, // 24 Stunden in Minuten
        shiftType: ShiftType.IsTask,
        status: ShiftStatus.Original,
      }),
      new Shift({
        id: '7',
        name: 'Nachtschicht',
        description: 'Nachtschicht mit Übergang über Mitternacht',
        fromDate: '2025-01-01',
        untilDate: '2025-12-31',
        startShift: '22:00',
        endShift: '06:00',
        cuttingAfterMidnight: true,
        isMonday: true,
        isTuesday: true,
        isWednesday: true,
        isThursday: true,
        isFriday: false,
        isSaturday: false,
        isSunday: false,
        isHoliday: false,
        isWeekdayOrHoliday: false,
        workTime: 8 * 60, // 8 Stunden in Minuten
        shiftType: ShiftType.IsTask,
        status: ShiftStatus.Original,
      }),
    ],
    maxItems: 7,
    maxPages: 1,
    currentPage: 1,
    firstItemOnPage: 1,
  };
}
